<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    
                    xmlns:local="clr-namespace:Epsylon.UberFactory.Themes.DataTemplates"                    
                    
                    xmlns:themes="clr-namespace:Epsylon.UberFactory.Themes"             
                    
                    xmlns:cdata="clr-namespace:Epsylon.UberFactory;assembly=Epsylon.UberFactory.Core"
                    
                    xmlns:bindings="clr-namespace:Epsylon.UberFactory.Bindings;assembly=Epsylon.UberFactory.Core"
                    
                    xmlns:data="clr-namespace:Epsylon.UberFactory"
                    
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    
                    xmlns:pitems="clr-namespace:Epsylon.UberFactory.Themes.ProjectItems"
                    >

    <BooleanToVisibilityConverter x:Key="__isVisible" />
    <themes:RelayCommandConverter x:Key="__asRelayCommand" />
    <themes:BooleanToTextWrappingConverter x:Key="__asTextWrapping" />

    <sys:String x:Key="L2N_SetNewReference">Set New Value</sys:String>
    <sys:String x:Key="L2N_SetNullReference">Set Empty Value</sys:String>
    <sys:String x:Key="L2N_SetDefaultReference">Remove Value</sys:String>
    <sys:String x:Key="L2N_PreviewResult">Preview Result</sys:String>
    
    
    
    
    <themes:ConvertibleToBrushConverter x:Key="__AsColorBrush" FalseBrush="Gray" TrueBrush="DarkSlateBlue" />
    <local:PropertyBindingsSelector x:Key="_BindingsViewSelector" />

    <SolidColorBrush x:Key="_NodeBackgroundColor">BlanchedAlmond</SolidColorBrush>

    <Style x:Key="_NodeExpanderStyle" TargetType="{x:Type Expander}" BasedOn="{StaticResource VerticalExpanderStyle}">
        <!-- http://stackoverflow.com/questions/666269/styling-nested-elements-in-wpf/666377#666377 -->
        <Setter Property="Margin" Value="4" />
        <Setter Property="IsExpanded" Value="True"/>
        <Setter Property="Background" Value="#30001040" />
    </Style>

    <ContextMenu x:Key="__clearValueContextMenu">
        <MenuItem Icon="{StaticResource _RemoveIcon}" Command="{Binding ClearValueCmd,Converter={StaticResource __asRelayCommand}}">
            <MenuItem.Header>
                <TextBlock>
                            <Run Text="Reset value to default:" />
                            <Run Text="{Binding DisplayDefaultValue,Mode=OneWay}" />
                </TextBlock>                
            </MenuItem.Header>
        </MenuItem>
    </ContextMenu>


    <DataTemplate x:Key="BindingView_Invalid">
        <GroupBox Header="{Binding DisplayName}" Style="{StaticResource HorizontalGroupBoxStyle}" ToolTip="{Binding ToolTip}">
            <TextBlock Text="INVALID BINDING" FontWeight="Bold" Foreground="Red"/>
        </GroupBox>
    </DataTemplate>


    <DataTemplate x:Key="BindingView_Group" >
        <GroupBox Header="{Binding DisplayName}" Style="{StaticResource BasicGroupBoxStyle}">
            <ItemsControl ItemsSource="{Binding Bindings}" ItemTemplateSelector="{StaticResource _BindingsViewSelector}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </GroupBox>
    </DataTemplate>

    <DataTemplate x:Key="BindingView_Group_Simplified" >        
        <ItemsControl ItemsSource="{Binding Bindings}" ItemTemplateSelector="{StaticResource _BindingsViewSelector}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>        
    </DataTemplate>


    <DataTemplate x:Key="BindingView_TextBox">
        <GroupBox Header="{Binding DisplayName}" Style="{StaticResource HorizontalGroupBoxStyle}" ToolTip="{Binding ToolTip}">
            <TextBox Text="{Binding Value}" MinWidth="32"
                     TextWrapping="{Binding IsMultiLine,Converter={StaticResource __asTextWrapping}}" AcceptsReturn="{Binding IsMultiLine}" MaxLines="{Binding MaxTextLines}" MinLines="1" VerticalScrollBarVisibility="Auto"
                     Foreground="{Binding HasValue,Converter={StaticResource __AsColorBrush}}"
                     ContextMenu="{StaticResource __clearValueContextMenu}"
                     BorderThickness="0,0,0,2" VerticalAlignment="Center"/>            
        </GroupBox>
    </DataTemplate>

    <DataTemplate x:Key="BindingView_CheckBox">
        <GroupBox Header="{Binding DisplayName}" Style="{StaticResource HorizontalGroupBoxStyle}" ToolTip="{Binding ToolTip}">
            <CheckBox IsChecked="{Binding Value}" ContextMenu="{StaticResource __clearValueContextMenu}"
                      Foreground="{Binding HasValue,Converter={StaticResource __AsColorBrush}}"
                      VerticalAlignment="Center"/>            
        </GroupBox>
    </DataTemplate>    

    <DataTemplate x:Key="BindingView_ComboBox">
        <GroupBox Header="{Binding DisplayName}" Style="{StaticResource HorizontalGroupBoxStyle}" ToolTip="{Binding ToolTip}" >
            <ComboBox ItemsSource="{Binding AvailableValues}"
                      SelectedValue="{Binding Value}"                      
                      ContextMenu="{StaticResource __clearValueContextMenu}"
                      Foreground="{Binding HasValue,Converter={StaticResource __AsColorBrush}}"
                      VerticalAlignment="Center"/>            
        </GroupBox>
    </DataTemplate>

    <DataTemplate x:Key="BindingView_DateBox">
        <GroupBox Header="{Binding DisplayName}" Style="{StaticResource HorizontalGroupBoxStyle}" ToolTip="{Binding ToolTip}">
            <DatePicker SelectedDate="{Binding Value}" ContextMenu="{StaticResource __clearValueContextMenu}" />            
        </GroupBox>
    </DataTemplate>

    <DataTemplate x:Key="BindingView_TimeBox">
        <GroupBox Header="{Binding DisplayName}" Style="{StaticResource HorizontalGroupBoxStyle}" ToolTip="{Binding ToolTip}">
            <local:TimeSpanControl Value="{Binding Value}" ContextMenu="{StaticResource __clearValueContextMenu}" />
        </GroupBox>
    </DataTemplate>

    <!-- Todo BindingView_TimeBox ... or just use three Int Properties -->

    <DataTemplate x:Key="BindingView_Slider">
        <GroupBox Header="{Binding DisplayName}" Style="{StaticResource HorizontalGroupBoxStyle}" ToolTip="{Binding ToolTip}">
            <DockPanel
                ContextMenu="{StaticResource __clearValueContextMenu}"
                TextElement.Foreground="{Binding HasValue,Converter={StaticResource __AsColorBrush}}">               

                <Grid DockPanel.Dock="Right" VerticalAlignment="Center">
                    <TextBlock Text="{Binding Minimum}" Visibility="Hidden"/>
                    <TextBlock Text="{Binding Maximum}" Visibility="Hidden"/>
                    <TextBlock Text="{Binding Value}"/>
                </Grid>
                
                <Slider Value="{Binding Value}" Minimum="{Binding Minimum}" Maximum="{Binding Maximum}" MinWidth="110" />
                
            </DockPanel>
        </GroupBox>
    </DataTemplate>

    <DataTemplate x:Key="BindingView_PathPicker">
        <GroupBox Header="{Binding DisplayName}" Style="{StaticResource HorizontalGroupBoxStyle}">
            <local:PathPicker ContextMenu="{StaticResource __clearValueContextMenu}"/>            
        </GroupBox>
    </DataTemplate>

    <DataTemplate x:Key="BindingView_ColorPicker">
        <local:ColorBindingView />
    </DataTemplate>






    <DataTemplate x:Key="BindingView_Dependency_Pipeline" >

        <Grid>

            <GroupBox VerticalAlignment="Top" Background="#40ff0000"
                          Style="{StaticResource HorizontalGroupBoxStyle}"                          
                          Visibility="{Binding IsEmpty,Converter={StaticResource asVisible}}" >

                <GroupBox.Header>
                    <Border Style="{StaticResource GroupBorderBaseStyle}" Background="Orange" HorizontalAlignment="Center">
                        <TextBlock Text="{Binding DisplayName}" />
                    </Border>
                </GroupBox.Header>

                <Button Content="{StaticResource _AddIcon}" Command="{Binding ChooseBindingCmd}" ToolTip="{StaticResource L2N_SetNewReference}" />

            </GroupBox>

            <GroupBox VerticalAlignment="Top"
                          Style="{StaticResource HorizontalGroupBoxStyle}"                          
                          Visibility="{Binding IsInstanced,Converter={StaticResource asVisible}}">

                <GroupBox.Header>

                    <GroupBox Style="{StaticResource HorizontalGroupBoxStyle}">
                        
                        <GroupBox.Header>
                            <TextBlock Text="{Binding DisplayName}" />
                        </GroupBox.Header>

                        <WrapPanel>
                            <Button Content="{StaticResource _InspectIcon}" Command="{Binding ViewResultCmd}"/>
                            <themes:SafeButton Content="{StaticResource _RemoveIcon}" Command="{Binding RemoveBindingCmd}" ToolTip="{StaticResource L2N_SetNullReference}"/>
                        </WrapPanel>
                    </GroupBox>
                    
                </GroupBox.Header>                

            </GroupBox>

        </Grid>

    </DataTemplate>    
    
    <DataTemplate x:Key="BindingView_Dependency_Single_Empty" >        

        <GroupBox VerticalAlignment="Top" Background="#40ff0000" Style="{StaticResource VerticalGroupBoxStyle}">

            <GroupBox.Header>
                <DockPanel HorizontalAlignment="Stretch">

                    <DockPanel.ContextMenu>
                        <ContextMenu>
                            <MenuItem Icon="{StaticResource _AddIcon}"    Header="{StaticResource L2N_SetNewReference}"     Command="{Binding ChooseParameterCmd}" />
                            <MenuItem Icon="{StaticResource _RemoveIcon}" Header="{StaticResource L2N_SetDefaultReference}" Command="{Binding SetParameterDefaultValueCmd}" Visibility="{Binding IsChildConfiguration,Converter={StaticResource asVisible}}" />
                        </ContextMenu>
                    </DockPanel.ContextMenu>

                    <TextBlock Text="{Binding DisplayName}" FontWeight="Bold" HorizontalAlignment="Left" />

                    <!-- this one is used to stretch the dockpanel along the whole header -->
                    <TextBlock Text="" HorizontalAlignment="Right" />

                </DockPanel>                
            </GroupBox.Header>

            <WrapPanel HorizontalAlignment="Center"  VerticalAlignment="Center">
                <themes:SafeButton Content="{StaticResource _EmptyIcon}"  Command="{Binding RemoveElementCmd}"            ToolTip="{StaticResource L2N_SetNullReference}" Visibility="{Binding IsCollectionElement,Converter={StaticResource asVisible}}" />
                <themes:SafeButton Content="{StaticResource _RemoveIcon}" Command="{Binding SetParameterDefaultValueCmd}" ToolTip="{StaticResource L2N_SetDefaultReference}" Visibility="{Binding IsChildConfiguration,Converter={StaticResource asVisible}}" />                
                <Button            Content="{StaticResource _AddIcon}"    Command="{Binding ChooseParameterCmd}"          ToolTip="{StaticResource L2N_SetNewReference}" />
            </WrapPanel>            

        </GroupBox>        

    </DataTemplate>

    <DataTemplate x:Key="BindingView_Dependency_Single_Instanced" >
        
        <Expander VerticalAlignment="Top" Style="{StaticResource _NodeExpanderStyle}">

            <Expander.Header>
                <DockPanel HorizontalAlignment="Stretch">

                    <DockPanel.ContextMenu>
                        <ContextMenu>
                            <MenuItem Icon="{StaticResource _InspectIcon}" Header="Preview result" Command="{Binding ViewResultCmd}" />
                            <Separator />
                            <MenuItem Icon="{StaticResource _AddIcon}"    Header="{StaticResource L2N_SetNewReference}"     Command="{Binding ChooseParameterCmd}" />
                            <MenuItem Icon="{StaticResource _EmptyIcon}"  Header="{StaticResource L2N_SetNullReference}"    Command="{Binding RemoveParameterCmd}"          Visibility="{Binding IsChildConfiguration,Converter={StaticResource asVisible}}" />
                            <MenuItem Icon="{StaticResource _RemoveIcon}" Header="{StaticResource L2N_SetDefaultReference}" Command="{Binding SetParameterDefaultValueCmd}" Visibility="{Binding IsOwnValue,Converter={StaticResource asVisible}}"/>
                        </ContextMenu>
                    </DockPanel.ContextMenu>

                    <TextBlock Text="{Binding DisplayName}" FontWeight="Bold" />
                    <themes:SafeButton Content="{StaticResource _EmptyIcon}"   Command="{Binding RemoveParameterCmd}"          DockPanel.Dock="Right" ToolTip="{StaticResource L2N_SetNullReference}" Visibility="{Binding IsChildConfiguration,Converter={StaticResource asVisible}}" />
                    <themes:SafeButton Content="{StaticResource _RemoveIcon}"  Command="{Binding SetParameterDefaultValueCmd}" DockPanel.Dock="Right" ToolTip="{StaticResource L2N_SetDefaultReference}" Visibility="{Binding IsOwnValue,Converter={StaticResource asVisible}}"/>
                    <Button            Content="{StaticResource _InspectIcon}" Command="{Binding ViewResultCmd}"               DockPanel.Dock="Right" ToolTip="{StaticResource L2N_PreviewResult}"/>
                    <TextBlock Text="    " />
                </DockPanel>
            </Expander.Header>

            <pitems:NodeView DataContext="{Binding NodeInstance}" />

        </Expander>        

    </DataTemplate>

    <DataTemplate x:Key="BindingView_Dependency_Multi" >

        <Grid>

            <Expander VerticalAlignment="Top" Style="{StaticResource _NodeExpanderStyle}">
                
                <Expander.Header>
                    <DockPanel HorizontalAlignment="Stretch">
                        <DockPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Icon="{StaticResource _AddIcon}" Header="Add new child" Command="{Binding AddParameterSlotCmd}" />                                
                            </ContextMenu>
                        </DockPanel.ContextMenu>
                        <TextBlock Text="{Binding DisplayName}" FontWeight="Bold" />                        
                        <Button Content="{StaticResource _AddIcon}" Command="{Binding AddParameterSlotCmd}" DockPanel.Dock="Right" ToolTip="{StaticResource L2N_SetNewReference}"/>
                        <TextBlock Text="    " />
                    </DockPanel>
                </Expander.Header>

                <ItemsControl ItemsSource="{Binding Slots}" ItemTemplateSelector="{StaticResource _BindingsViewSelector}" >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="{Binding ItemsControlPanelOrientation}" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>                

            </Expander>

        </Grid>

    </DataTemplate>


</ResourceDictionary>